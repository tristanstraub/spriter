{"name":"Spriter","tagline":"CSS sprite sheet generator","body":"[![build status](https://secure.travis-ci.org/unfold/spriter.png)](http://travis-ci.org/unfold/spriter)\r\n\r\n### CSS Sprites Made Simple.\r\n\r\nSpriter analyzes your existing CSS files and either generates highly \r\noptimized sprite sheets using a [growing binary tree bin-packing algorithm](http://codeincomplete.com/posts/2011/5/7/bin_packing) or inlines them using [data URIs](http://en.wikipedia.org/wiki/Data_URI_scheme#CSS) \r\nand outputs an updated CSS stylesheet.\r\n\r\nIt even groups your [retina](http://work.no/lib/images/generated/sprites/base@2x.png) \r\nand [non-retina](http://work.no/lib/images/generated/sprites/base@2x.png) images \r\ninto separate sprite sheets to reduce load times.\r\n\r\n#### No strings attached\r\n\r\nInstead of relying on a specific [framework](http://compass-style.org) \r\nor [build system](http://gruntjs.com) Spriter will work with anything that outputs \r\nor processes a CSS file.\r\n\r\n### Installation\r\n\r\n    $ npm install spriter\r\n\r\n### Usage\r\n\r\n    $ spriter [options] [file]\r\n\r\n### Options\r\n    -t, --target <path>      target path relative to input (required unless generating inline)\r\n    -s, --source <path>      source path relative to input (required when stdin is used)\r\n    -f, --filter <path>      source url filter (e.g: images/sprites)\r\n    -i, --inline             inline sprites as data URIs\r\n    -O, --no-optimization    disable rule optimization\r\n    -h, --help               output usage information\r\n    -V, --version            output the version number\r\n\r\n### Examples\r\n\r\n#### Generating a sprite sheet from an existing CSS file:\r\n\r\n    $ spriter --target images/sprites.png main.css > main.sprited.css\r\n    \r\nIf Spriter finds any retina resolution images it will generate a separate sprite sheet \r\nfor those images (in this example `Ã­mages/sprites@2x.png`)\r\n    \r\n#### Using Spriter with [SASS](http://sass-lang.com):\r\n\r\n    $ sass css/main.scss | spriter --source css --target images/sprites.png > main.css\r\n    \r\nThe `--source` option tells Spriter how to translate URLs into file system paths \r\nwhen reading images.\r\n\r\nIn this example the resulting sprite would be generated at `css/images/sprites.png`.\r\n\r\n#### Only include images in a specific location:\r\n\r\n    $ spriter --target images/home-sprites.png --filter images/home/ main.css > main.sprited.css\r\n\r\nThis is handy for multi-page sites where you want to group sprite sheets by page or similar.\r\n\r\n#### Inline images in CSS using [data URIs](http://en.wikipedia.org/wiki/Data_URI_scheme#CSS)\r\n\r\n    $ spriter --filter images/sprites/icons/ --inline main.css > main.sprited.css\r\n\r\n### Rule optimization\r\n\r\nSpriter will by default convert multi-declaration backgrounds to a single \r\nshort-hand within the same rule:\r\n\r\n```css\r\n.circle {\r\n    background: url(images/generated/sprites.png) no-repeat;\r\n    background-position: -50px 0;\r\n    background-color: #ccc;\r\n    background-size: 100px auto\r\n}\r\n```\r\n\r\nbecomes:\r\n\r\n```css\r\n.circle {\r\n    background: #ccc url(images/generated/sprites.png) -50px 0/100px auto no-repeat\r\n}\r\n```\r\n\r\nOptimization can be disabled by supplying the `--no-optimization` flag.\r\n\r\n### API\r\n\r\n    var spriter = require('spriter')\r\n    \r\n    spriter(string, sourcePath, targetPath, optimize, inline)\r\n\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 Simen Brekken &lt;simen@unfold.no&gt; and Daniel Mahal &lt;daniel@unfold.no&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"UA-21248447-15","note":"Don't delete this file! It's used internally to help with page regeneration."}